BEGIN_PROLOG
  unhuff: { module_type: Decompression }

  unhuff_1720: @local::unhuff
  unhuff_1720.instance_name: V1720
  unhuff_1720.compressed_label: huffdiffV1720
  unhuff_1720.table_file: "table_daqV1720_huff_diff.txt"
  unhuff_1720.table_file_path: "DAQ_INDATA_PATH"
  unhuff_1724: @local::unhuff
  unhuff_1724.instance_name: V1724
  unhuff_1724.compressed_label: huffdiffV1724
  unhuff_1724.table_file: "table_daqV1724_huff_diff.txt"
  unhuff_1724.table_file_path: "DAQ_INDATA_PATH"

  checker: {
    module_type: CompressionChecker
    raw_label: daq
  }

  checker_1720: @local::checker
  checker_1720.instance: V1720
  checker_1720.uncompressed_label: unhuffV1720
  checker_1724: @local::checker
  checker_1724.instance: V1724
  checker_1724.uncompressed_label: unhuffV1724
END_PROLOG

physics:
{
  producers:
  {
    # decompress
    unhuffV1720: @local::unhuff_1720
    unhuffV1724: @local::unhuff_1724
  }

  analyzers:
  {
    evtDump:
    {
      module_type: EventDump
      raw_data_label: daq
      uncompressed_V1720_label: unhuffV1720
      uncompressed_V1724_label: unhuffV1724
    }

    printBuildInfo: {
      module_type: PrintBuildInfo
      buildinfo_module_label: BuildInfo
      buildinfo_instance_label: ArtdaqDemo
    }

    # check decompression
    checkerV1720: @local::checker_1720
    checkerV1724: @local::checker_1724
  }

  a1: [ evtDump, checkerV1720, printBuildInfo ]
  #a1: [ evtDump, checkerV1720, checkerV1724 ]

  f1: [ unhuffV1720 ]
  #f1: [ unhuffV1720, unhuffV1724 ]

  e1: [ out1 ]

  trigger_paths: [ f1 ]
  end_paths: [ a1, e1 ]
}

outputs:
{
  out1:
  {
    module_type: FileDumperOutput
    wantProductFriendlyClassName: true
  }
}

source:
{
  module_type: RootInput
  fileNames: [ "/tmp/artdaqdemo_eb00_20130501000000.root" ]
}

process_name: EVTDUMP
